function [X, l, steps] = orthogonal_iteration(A, tol, max_steps)    n = length(A);    prev_X = rand(n);    steps = 0;        % Ortogonalizam x_1, ..., x_n    for i = 2:n        % Stergem componentele  x_1, ..., x_{i-1}        sum = (prev_X(:, 1:i-1)' * prev_X(:, i))';        sum *= prev_X(:, 1:i-1)';        sum = sum';        prev_X(:, i) = prev_X(:, i) - sum;    endfor        while 1        [Q, R] = qr(prev_X);        X = A * Q;                err = norm(X - prev_X);        if (++steps == max_steps || err < tol)            X = Q;            l = diag(R)';            break;        endif                prev_X = X;    endwhileendfunction